-------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /home/gh8728/Liquor/Data/NY_price_schedules/data_clean_old_format.
> txt
  log type:  text
 opened on:  23 May 2016, 17:32:17

. 
. /* Dealing with all years prior to 2014 */
. 
. local months "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec"

. local years "2009 2010 2011 2012 2013"

. 
. foreach y in `years'{
  2.         foreach m in `months'{
  3.                 disp "Parsing `y'`m'"
  4.                 import delimited using "`y'/LR-`m'-`y'.txt", encoding(UTF-
> 16) clear
  5.                 tempfile tmp`y'`m'
  6.                 save `tmp`y'`m''
  7.         }
  8. }
Parsing 2009Jan
(19 vars, 30403 obs)
file /tmp/St28882.000001 saved
Parsing 2009Feb
(19 vars, 27398 obs)
file /tmp/St28882.000002 saved
Parsing 2009Mar
(19 vars, 31092 obs)
file /tmp/St28882.000003 saved
Parsing 2009Apr
(19 vars, 30381 obs)
file /tmp/St28882.000004 saved
Parsing 2009May
(19 vars, 33265 obs)
file /tmp/St28882.000005 saved
Parsing 2009Jun
(19 vars, 32387 obs)
file /tmp/St28882.000006 saved
Parsing 2009Jul
(19 vars, 33525 obs)
file /tmp/St28882.000007 saved
Parsing 2009Aug
(19 vars, 31791 obs)
file /tmp/St28882.000008 saved
Parsing 2009Sep
(19 vars, 33469 obs)
file /tmp/St28882.000009 saved
Parsing 2009Oct
(19 vars, 33738 obs)
file /tmp/St28882.00000a saved
Parsing 2009Nov
(19 vars, 35327 obs)
file /tmp/St28882.00000b saved
Parsing 2009Dec
(19 vars, 34946 obs)
file /tmp/St28882.00000c saved
Parsing 2010Jan
(19 vars, 33373 obs)
file /tmp/St28882.00000d saved
Parsing 2010Feb
(19 vars, 33424 obs)
file /tmp/St28882.00000e saved
Parsing 2010Mar
(19 vars, 33419 obs)
file /tmp/St28882.00000f saved
Parsing 2010Apr
(19 vars, 33751 obs)
file /tmp/St28882.00000g saved
Parsing 2010May
(19 vars, 34532 obs)
file /tmp/St28882.00000h saved
Parsing 2010Jun
(19 vars, 34446 obs)
file /tmp/St28882.00000i saved
Parsing 2010Jul
(19 vars, 35934 obs)
file /tmp/St28882.00000j saved
Parsing 2010Aug
(19 vars, 34335 obs)
file /tmp/St28882.00000k saved
Parsing 2010Sep
(19 vars, 36412 obs)
file /tmp/St28882.00000l saved
Parsing 2010Oct
(19 vars, 34825 obs)
file /tmp/St28882.00000m saved
Parsing 2010Nov
(19 vars, 36586 obs)
file /tmp/St28882.00000n saved
Parsing 2010Dec
(19 vars, 38001 obs)
file /tmp/St28882.00000o saved
Parsing 2011Jan
(19 vars, 37963 obs)
file /tmp/St28882.00000p saved
Parsing 2011Feb
(19 vars, 39828 obs)
file /tmp/St28882.00000q saved
Parsing 2011Mar
(19 vars, 40332 obs)
file /tmp/St28882.00000r saved
Parsing 2011Apr
(19 vars, 38436 obs)
file /tmp/St28882.00000s saved
Parsing 2011May
(19 vars, 39305 obs)
file /tmp/St28882.00000t saved
Parsing 2011Jun
(19 vars, 43389 obs)
file /tmp/St28882.00000u saved
Parsing 2011Jul
(19 vars, 33805 obs)
file /tmp/St28882.00000v saved
Parsing 2011Aug
(19 vars, 34319 obs)
file /tmp/St28882.00000w saved
Parsing 2011Sep
(19 vars, 34863 obs)
file /tmp/St28882.00000x saved
Parsing 2011Oct
(19 vars, 35546 obs)
file /tmp/St28882.000010 saved
Parsing 2011Nov
(19 vars, 38824 obs)
file /tmp/St28882.000011 saved
Parsing 2011Dec
(19 vars, 38212 obs)
file /tmp/St28882.000012 saved
Parsing 2012Jan
(19 vars, 35688 obs)
file /tmp/St28882.000013 saved
Parsing 2012Feb
(19 vars, 35786 obs)
file /tmp/St28882.000014 saved
Parsing 2012Mar
(19 vars, 36355 obs)
file /tmp/St28882.000015 saved
Parsing 2012Apr
(19 vars, 37384 obs)
file /tmp/St28882.000016 saved
Parsing 2012May
(19 vars, 36368 obs)
file /tmp/St28882.000017 saved
Parsing 2012Jun
(19 vars, 36656 obs)
file /tmp/St28882.000018 saved
Parsing 2012Jul
(19 vars, 37128 obs)
file /tmp/St28882.000019 saved
Parsing 2012Aug
(19 vars, 37590 obs)
file /tmp/St28882.00001a saved
Parsing 2012Sep
(19 vars, 37733 obs)
file /tmp/St28882.00001b saved
Parsing 2012Oct
(19 vars, 35203 obs)
file /tmp/St28882.00001c saved
Parsing 2012Nov
(19 vars, 35313 obs)
file /tmp/St28882.00001d saved
Parsing 2012Dec
(19 vars, 34291 obs)
file /tmp/St28882.00001e saved
Parsing 2013Jan
(19 vars, 34265 obs)
file /tmp/St28882.00001f saved
Parsing 2013Feb
(19 vars, 34514 obs)
file /tmp/St28882.00001g saved
Parsing 2013Mar
(19 vars, 34211 obs)
file /tmp/St28882.00001h saved
Parsing 2013Apr
(19 vars, 35334 obs)
file /tmp/St28882.00001i saved
Parsing 2013May
(19 vars, 35483 obs)
file /tmp/St28882.00001j saved
Parsing 2013Jun
(19 vars, 35455 obs)
file /tmp/St28882.00001k saved
Parsing 2013Jul
(19 vars, 35499 obs)
file /tmp/St28882.00001l saved
Parsing 2013Aug
(19 vars, 36097 obs)
file /tmp/St28882.00001m saved
Parsing 2013Sep
(19 vars, 36315 obs)
file /tmp/St28882.00001n saved
Parsing 2013Oct
(19 vars, 37068 obs)
file /tmp/St28882.00001o saved
Parsing 2013Nov
(19 vars, 36907 obs)
file /tmp/St28882.00001p saved
Parsing 2013Dec
(19 vars, 38698 obs)
file /tmp/St28882.00001q saved

. 
. local 2014MonthsOld "Jan Feb Mar Apr"

. 
. foreach m in `2014MonthsOld'{
  2.         disp "Parsing 2014`m'"
  3.         import delimited using "2014/LR-`m'-2014-old-format.txt", encoding
> (UTF-16) clear
  4.         tempfile tmp2014`m'
  5.         save `tmp2014`m''
  6. }
Parsing 2014Jan
(19 vars, 38724 obs)
file /tmp/St28882.00001r saved
Parsing 2014Feb
(19 vars, 38814 obs)
file /tmp/St28882.00001s saved
Parsing 2014Mar
(19 vars, 38602 obs)
file /tmp/St28882.00001t saved
Parsing 2014Apr
(19 vars, 10744 obs)
file /tmp/St28882.00001u saved

. 
. clear // starting with a clean dataset

. 
. foreach y in `years'{
  2.         foreach m in `months'{
  3.                 disp "Appending `y'`m'"
  4.                 append using `tmp`y'`m''
  5.         }
  6. }
Appending 2009Jan
Appending 2009Feb
Appending 2009Mar
Appending 2009Apr
(note: variable product_item_name was str91, now str99 to accommodate using
       data's values)
Appending 2009May
Appending 2009Jun
Appending 2009Jul
Appending 2009Aug
Appending 2009Sep
Appending 2009Oct
Appending 2009Nov
Appending 2009Dec
Appending 2010Jan
Appending 2010Feb
(note: variable product_item_name was str99, now str118 to accommodate using
       data's values)
Appending 2010Mar
Appending 2010Apr
Appending 2010May
Appending 2010Jun
Appending 2010Jul
Appending 2010Aug
Appending 2010Sep
(note: variable brand_name was str93, now str120 to accommodate using data's
       values)
Appending 2010Oct
Appending 2010Nov
Appending 2010Dec
Appending 2011Jan
Appending 2011Feb
Appending 2011Mar
Appending 2011Apr
Appending 2011May
Appending 2011Jun
Appending 2011Jul
(note: variable brand_name was str120, now str121 to accommodate using data's
       values)
Appending 2011Aug
Appending 2011Sep
Appending 2011Oct
Appending 2011Nov
Appending 2011Dec
Appending 2012Jan
Appending 2012Feb
Appending 2012Mar
(note: variable label_type was str34, now str36 to accommodate using data's
       values)
Appending 2012Apr
Appending 2012May
Appending 2012Jun
(note: variable qty_discount_id was str204, now str255 to accommodate using
       data's values)
Appending 2012Jul
(note: variable size was str19, now str20 to accommodate using data's values)
Appending 2012Aug
Appending 2012Sep
Appending 2012Oct
Appending 2012Nov
Appending 2012Dec
Appending 2013Jan
Appending 2013Feb
Appending 2013Mar
Appending 2013Apr
Appending 2013May
Appending 2013Jun
Appending 2013Jul
Appending 2013Aug
Appending 2013Sep
Appending 2013Oct
Appending 2013Nov
Appending 2013Dec

. 
. foreach m in `2014MonthsOld'{
  2.         disp "Appending 2014`m'"
  3.         append using `tmp2014`m''
  4. }
Appending 2014Jan
Appending 2014Feb
Appending 2014Mar
Appending 2014Apr

. 
. gen record_num = _n

. 
. rename qty_discount_id discount_code

. 
. save old_format_months, replace
file old_format_months.dta saved

. 
. clear

. /* importing the discount codes and then merging them in */
. foreach y in `years'{
  2.         disp "Parsing discoutn codes for `y'"
  3.         import delimited using "`y'/Discount-codes-`y'.txt", encoding(UTF-
> 16) clear
  4.         duplicates drop _all, force // there appear to be duplicate record
> s
  5.         
.         tempfile discount`y'
  6.         save `discount`y''
  7. }
Parsing discoutn codes for 2009
(6 vars, 2847 obs)

Duplicates in terms of nv_serial_number posting_type posting_month posting_year
    discount_code discount_desc

(668 observations deleted)
file /tmp/St28882.00001v saved
Parsing discoutn codes for 2010
(6 vars, 105986 obs)

Duplicates in terms of nv_serial_number posting_type posting_month posting_year
    discount_code discount_desc

(83,549 observations deleted)
file /tmp/St28882.00001w saved
Parsing discoutn codes for 2011
(6 vars, 101373 obs)

Duplicates in terms of nv_serial_number posting_type posting_month posting_year
    discount_code discount_desc

(86,767 observations deleted)
file /tmp/St28882.00001x saved
Parsing discoutn codes for 2012
(6 vars, 4871 obs)

Duplicates in terms of nv_serial_number posting_type posting_month posting_year
    discount_code discount_desc

(2,774 observations deleted)
file /tmp/St28882.000020 saved
Parsing discoutn codes for 2013
(6 vars, 3632 obs)

Duplicates in terms of nv_serial_number posting_type posting_month posting_year
    discount_code discount_desc

(1,815 observations deleted)
file /tmp/St28882.000021 saved

. 
. import delimited using "2014/Discount-codes-Jan-thru-Apr-2014-old-format.txt"
> , encoding(UTF-16) clear
(6 vars, 2047 obs)

. duplicates drop _all, force // there appear to be EXACT duplicate records. No
> t sure why

Duplicates in terms of nv_serial_number posting_type posting_month posting_year
    discount_code discount_desc

(1,183 observations deleted)

. 
. foreach y in `years'{
  2.         disp "Appending discount codes for `y'"
  3.         append using `discount`y''
  4. }
Appending discount codes for 2009
(note: variable discount_desc was str197, now str255 to accommodate using
       data's values)
Appending discount codes for 2010
Appending discount codes for 2011
Appending discount codes for 2012
Appending discount codes for 2013

. 
. drop if posting_type == "LW"
(1,545 observations deleted)

. 
. /* again, more duplicates. Not sure why. An eye scan suggests they're the sam
> e. Perhaps there's hidden characters.
> Need to be careful about this. */
. duplicates drop nv_serial_number posting_year posting_month posting_type disc
> ount_code, force // droping unwated records. May want these later

Duplicates in terms of nv_serial_number posting_year posting_month posting_type
    discount_code

(35,161 observations deleted)

. 
. tempfile AllDiscountCodes

. save `AllDiscountCodes'
file /tmp/St28882.000022 saved

. 
. 
. clear

. 
. use old_format_months

. 
. merge m:1 nv_serial_number posting_year posting_month posting_type discount_c
> ode using `AllDiscountCodes'

    Result                           # of obs.
    -----------------------------------------
    not matched                     2,260,322
        from master                 2,253,224  (_merge==1)
        from using                      7,098  (_merge==2)

    matched                               583  (_merge==3)
    -----------------------------------------

. 
. drop if _merge == 2 //dropping unused discount codes
(7,098 observations deleted)

. /* some records appear to refer to the same product but have different prices
> .
> Nothing in the data disctinguishes them. So, dropping for now */
. duplicates drop nv_serial_number posting_year posting_month posting_type disc
> ount_code, force // droping unwated records. May want these later

Duplicates in terms of nv_serial_number posting_year posting_month posting_type
    discount_code

(1,509,740 observations deleted)

. 
. save old_format_months, replace
file old_format_months.dta saved

. 
. /* Fixing sizes so they have a common format */
. replace size = ustrregexra(size, "[^a-zA-Z0-9.]","") // removing non-alpha nu
> meric characters
(199,782 real changes made)

. 
. /* cleaning up some different labels to have consistent structure. Covers 90+
> % of raw
> data */
. replace size = "1L" if size == "1.0L"
(61,678 real changes made)

. replace size = "750ML" if size == "750"
(25,652 real changes made)

. replace size = "50ML" if size == "050ML"
(11,308 real changes made)

. replace size = "1.75L" if size == "1.75"
(5,359 real changes made)

. replace size = "375ML" if size == "375"
(4,563 real changes made)

. replace size = "1L" if size == "LT"
(1,346 real changes made)

. replace size = "750ML" if size == "750BTL"
(2,992 real changes made)

. replace size = "750ML" if size == "750ML."
(3,853 real changes made)

. replace size = "1L" if size == "LITER"
(3,956 real changes made)

. replace size = "50ML" if size == "50"
(823 real changes made)

. replace size = "1L" if size == "1LT"
(2,154 real changes made)

. replace size = "750ML" if size == "0.75"
(3,320 real changes made)

. replace size = "200ML" if size == "200"
(1,379 real changes made)

. replace size = "750ML" if size == ".750LITERSBOTTLE"
(29 real changes made)

. replace size = "1L" if size == "1"
(1,511 real changes made)

. replace size = "1L" if size == "1LITER"
(851 real changes made)

. replace size = "1L" if size == "1LIT"
(594 real changes made)

. replace size = "750ML" if size == "0.75BTL"
(771 real changes made)

. replace size = "1LTR" if size == "1L"
(140,378 real changes made)

. replace size = "1.75L" if size == "1.75LT"
(301 real changes made)

. replace size = "50ML" if size == "50ML."
(280 real changes made)

. replace size = "375ML" if size == "375ML."
(576 real changes made)

. replace size = "1L" if size == "1000ML"
(616 real changes made)

. replace size = "1.75L" if size == "1.75LIT"
(427 real changes made)

. replace size = "375ML" if size == ".375LITERSBOTTLE"
(9 real changes made)

. replace size = "200ML" if size == ".200LITERSBOTTLE"
(13 real changes made)

. replace size = "1.75L" if size == "1.75ML"
(495 real changes made)

. replace size = "1L" if size == "1.000LITERSBOTTLE" 
(7 real changes made)

. 
. /* keeping only larger bottles. Most likely to be purcahsed sizes I think*/
. keep if size == "750ML" | size == "1L" | size == "1.75L"
(323,281 observations deleted)

. 
. /* identifying the type of discount, case or bottle */
. gen discount_size_type = ""
(420,786 missing values generated)

. replace discount_size_type = "CASE" if regexm(discount_code, "(CS)|(CASE)|(CA
> S)")
variable discount_size_type was str1 now str4
(129,345 real changes made)

. replace discount_size_type = "BOTTLE" if regexm(discount_code, "(BT)|(BTL)|(B
> OTTLE)")
variable discount_size_type was str4 now str6
(243,896 real changes made)

. 
. /* Identifying if discount is in percentage terms or dollar terms */
. gen pct_discount = regexm(discount_code, "[\%]") // in brackets to ensure it 
> matches %

. gen dollar_discount = regexm(discount_code, "[\$]")

. 
. /* Dropping unclear discounts */
. drop if pct_discount == 0 & dollar_discount == 0 // unclear discount style
(74,435 observations deleted)

. drop if discount_size_type == "" // unclear if case or bottles
(17,348 observations deleted)

. drop if pct_discount == 1 & dollar_discount == 1 // small number of observati
> ons with typos. Can fix later
(161 observations deleted)

. 
. replace discount_code = subinstr(discount_code, ")", ",",.) // normalizing so
> me formatting
(36,020 real changes made)

. replace discount_code = subinstr(discount_code, "(", "",.) // normalizing som
> e formatting
(36,020 real changes made)

. replace discount_code = stritrim(discount_code) // removing internal double s
> paces
(227,978 real changes made)

. 
. drop if regexm(discount_code, "-") // irregular formatting for discoutn code.
>  Maybe fix later.
(9,309 observations deleted)

. 
. /* Using the SSC package moss to pull numbers out of discount codes */
. 
. moss discount_code, match("([0-9\.]+)") regex // pulls all numbers out of dis
> count code

. 
. /* Now converting these into useful variables. The discount descriptions alwa
> ys
> has two paired numbres. The first is the discount amount and the second is th
> e
> required purchase quantity. So, starting with 1 it should alternate between
> the discoutn amount and qty. */
. 
. foreach v of varlist _match*{
  2.         local num : subinstr local v "_match" "" // removes "_match" form 
> local v
  3.         if mod(`num',2) != 0{
  4.                 local new_num = (`num' + 1) / 2
  5.                 rename `v' disc_p`new_num'
  6.         }
  7.         else {
  8.                 local new_num = (`num')/2
  9.                 rename `v' disc_q`new_num'
 10.         }
 11. }

. 
. /* Converting to numeric */
. destring(disc_*), replace force // shouldn't be any non-numerics. Not sure wh
> y force is needed
disc_p1 contains nonnumeric characters; disc_p1 replaced as double
(2 missing values generated)
disc_q1 contains nonnumeric characters; disc_q1 replaced as double
(307 missing values generated)
disc_p2 contains nonnumeric characters; disc_p2 replaced as double
(60319 missing values generated)
disc_q2 contains nonnumeric characters; disc_q2 replaced as double
(61710 missing values generated)
disc_p3 contains nonnumeric characters; disc_p3 replaced as double
(174562 missing values generated)
disc_q3 contains nonnumeric characters; disc_q3 replaced as double
(174795 missing values generated)
disc_p4 contains nonnumeric characters; disc_p4 replaced as double
(269945 missing values generated)
disc_q4 contains nonnumeric characters; disc_q4 replaced as double
(270038 missing values generated)
disc_p5 contains nonnumeric characters; disc_p5 replaced as double
(305403 missing values generated)
disc_q5 contains nonnumeric characters; disc_q5 replaced as double
(305456 missing values generated)
disc_p6 contains nonnumeric characters; disc_p6 replaced as double
(316521 missing values generated)
disc_q6 contains nonnumeric characters; disc_q6 replaced as double
(316529 missing values generated)
disc_p7 contains nonnumeric characters; disc_p7 replaced as double
(318854 missing values generated)
disc_q7 contains nonnumeric characters; disc_q7 replaced as int
(318867 missing values generated)
disc_p8 contains nonnumeric characters; disc_p8 replaced as double
(319219 missing values generated)
disc_q8 contains nonnumeric characters; disc_q8 replaced as int
(319227 missing values generated)
disc_p9 contains nonnumeric characters; disc_p9 replaced as double
(319408 missing values generated)
disc_q9 contains nonnumeric characters; disc_q9 replaced as int
(319408 missing values generated)
disc_p10 contains nonnumeric characters; disc_p10 replaced as double
(319506 missing values generated)
disc_q10 contains nonnumeric characters; disc_q10 replaced as int
(319506 missing values generated)
disc_p11 contains nonnumeric characters; disc_p11 replaced as double
(319526 missing values generated)
disc_q11 contains nonnumeric characters; disc_q11 replaced as byte
(319526 missing values generated)

. 
. drop _count _pos*

. 
. /* Restructuring into long format. This will allow graphing of the tariff,
> price paid, and normalizing to see curvature. */
. 
. /* adding in a 0th option which is the normal price */
. gen disc_p0 = 0

. gen disc_q0 = 0

. 
. reshape long disc_p disc_q, i(record_num) j(option)
(note: j = 0 1 2 3 4 5 6 7 8 9 10 11)
disc_p1:  176417 values would be changed; not changed
disc_q1:  1212 values would be changed; not changed
disc_p2:  145164 values would be changed; not changed
disc_q2:  585 values would be changed; not changed
disc_p3:  83569 values would be changed; not changed
disc_q3:  198 values would be changed; not changed
disc_p4:  27446 values would be changed; not changed
disc_q4:  96 values would be changed; not changed
disc_p5:  7652 values would be changed; not changed
disc_q5:  24 values would be changed; not changed
disc_p6:  1684 values would be changed; not changed
disc_q6:  12 values would be changed; not changed
disc_p7:  434 values would be changed; not changed
disc_p8:  200 values would be changed; not changed
disc_p9:  60 values would be changed; not changed
disc_p10:  20 values would be changed; not changed

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                   319533   -> 3.8e+06
Number of variables                  49   ->      28
j variable (12 values)                    ->   option
xij variables:
           disc_p0 disc_p1 ... disc_p11   ->   disc_p
           disc_q0 disc_q1 ... disc_q11   ->   disc_q
-----------------------------------------------------------------------------

. 
. /* Dropping observations that are extra (i.e. have 2 tariff options while
> the maximum observed in the data set is higher than 2) or some other problem
> that resulted in a missing value for p or q */
. drop if disc_p == . | disc_q == .
(2,725,808 observations deleted)

. 
. /* Calculating actual price paid at each point. 4 cases to deal with:
> 1) pct discount on cases
> 2) pct discount on bottles
> 3) dollar discount on cases
> 4) dollar discount on bottles
> 
> First thing is to convert all discounts into one type. So I'll convert everyt
> hing
> into dollar discounts. Everything will be kept in the same units as the disco
> unt
> size type for now (i.e. if its a bottle discount then the tariff will be expr
> essed
> in bottle terms).
> 
> Generally there doesn't appear to be much of a discount for buying a case vs 
> bottles striaght up (beyond the discount for a cases worth of bottles). In th
> ose
> instances where there is a big discrepancy represent less than 1% of the data
> , so
> we can probably assume their typos */
. gen disc_dollars = .
(1,108,588 missing values generated)

. replace disc_dollars = disc_p if dollar_discount == 1
(1,041,717 real changes made)

. replace disc_dollars = disc_p/100*price_per_case if discount_size_type == "CA
> SE" & pct_discount == 1
(48,570 real changes made)

. replace disc_dollars = disc_p/100*price_per_bottle if discount_size_type == "
> BOTTLE" & pct_discount == 1
(18,301 real changes made)

. 
. gen actual_p = .
(1,108,588 missing values generated)

. replace actual_p = price_per_bottle - disc_dollars if discount_size_type == "
> BOTTLE"
(751,520 real changes made)

. replace actual_p = price_per_case - disc_dollars if discount_size_type == "CA
> SE"
(357,068 real changes made)

. 
. gen tariff = actual_p * disc_q

. 
. egen max_p = max(actual_p), by(record_num)

. 
. gen norm_p = actual_p / max_p

. 
. gen norm_tariff = norm_p*disc_q

. 
. save old_format_months, replace
file old_format_months.dta saved

. 
. log close
      name:  <unnamed>
       log:  /home/gh8728/Liquor/Data/NY_price_schedules/data_clean_old_format.
> txt
  log type:  text
 closed on:  23 May 2016, 17:40:06
-------------------------------------------------------------------------------
