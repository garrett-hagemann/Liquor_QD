--------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  E:\Box\Box Sync\Snuffles Backup\gh8728\Projects\Liquor\Data\NY_price_schedules\data_clean_old_for
> mat.txt
  log type:  text
 opened on:  26 Nov 2017, 22:05:16

. 
. /* Dealing with all years prior to 2014 */
. 
. local months "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec"

. local years "2009 2010 2011 2012 2013"

. 
. foreach y in `years'{
  2.         foreach m in `months'{
  3.                 disp "Parsing `y'`m'"
  4.                 import delimited using "`y'/LR-`m'-`y'.txt", clear // will generate an error, but appears
>  to have no effect. In stata 14, use option encoding(UTF-16). Files are encoded in UTF-16LE. But doesn't app
> ear to contain any special characters?
  5.                 tempfile tmp`y'`m'
  6.                 save `tmp`y'`m''
  7.         }
  8. }
Parsing 2009Jan
Note:  4,479,791 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 30403 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000001.tmp saved
Parsing 2009Feb
Note:  3,903,370 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 27398 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000002.tmp saved
Parsing 2009Mar
Note:  4,615,382 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 31092 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000003.tmp saved
Parsing 2009Apr
Note:  4,479,599 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 30381 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000004.tmp saved
Parsing 2009May
Note:  4,819,667 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 33265 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000005.tmp saved
Parsing 2009Jun
Note:  4,692,381 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 32387 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000006.tmp saved
Parsing 2009Jul
Note:  4,824,587 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 33525 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000007.tmp saved
Parsing 2009Aug
Note:  4,616,954 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 31791 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000008.tmp saved
Parsing 2009Sep
Note:  4,861,494 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 33469 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000009.tmp saved
Parsing 2009Oct
Note:  4,904,965 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 33738 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000a.tmp saved
Parsing 2009Nov
Note:  5,240,637 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 35327 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000b.tmp saved
Parsing 2009Dec
Note:  5,196,602 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 34946 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000c.tmp saved
Parsing 2010Jan
Note:  4,886,755 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 33373 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000d.tmp saved
Parsing 2010Feb
Note:  4,926,554 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 33424 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000e.tmp saved
Parsing 2010Mar
Note:  4,932,119 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 33419 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000f.tmp saved
Parsing 2010Apr
Note:  4,948,444 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 33751 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000g.tmp saved
Parsing 2010May
Note:  5,098,589 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 34532 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000h.tmp saved
Parsing 2010Jun
Note:  5,099,650 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 34446 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000i.tmp saved
Parsing 2010Jul
Note:  5,142,823 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 35934 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000j.tmp saved
Parsing 2010Aug
Note:  5,044,929 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 34335 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000k.tmp saved
Parsing 2010Sep
Note:  5,319,264 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 36412 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000l.tmp saved
Parsing 2010Oct
Note:  5,131,178 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 34825 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000m.tmp saved
Parsing 2010Nov
Note:  5,378,270 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 36586 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000n.tmp saved
Parsing 2010Dec
Note:  5,551,171 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 38001 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000o.tmp saved
Parsing 2011Jan
Note:  5,421,432 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 37963 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000p.tmp saved
Parsing 2011Feb
Note:  5,735,556 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 39828 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000q.tmp saved
Parsing 2011Mar
Note:  5,695,253 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 40332 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000r.tmp saved
Parsing 2011Apr
Note:  5,424,944 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 38436 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000s.tmp saved
Parsing 2011May
Note:  5,556,126 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 39305 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000t.tmp saved
Parsing 2011Jun
Note:  6,000,769 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 43389 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000u.tmp saved
Parsing 2011Jul
Note:  4,810,216 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 33805 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000v.tmp saved
Parsing 2011Aug
Note:  4,893,825 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 34319 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000w.tmp saved
Parsing 2011Sep
Note:  4,988,671 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 34863 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100000x.tmp saved
Parsing 2011Oct
Note:  5,126,707 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 35546 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000010.tmp saved
Parsing 2011Nov
Note:  5,665,131 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 38824 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000011.tmp saved
Parsing 2011Dec
Note:  5,611,899 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 38212 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000012.tmp saved
Parsing 2012Jan
Note:  5,154,395 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 35688 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000013.tmp saved
Parsing 2012Feb
Note:  5,178,895 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 35786 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000014.tmp saved
Parsing 2012Mar
Note:  5,298,181 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 36355 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000015.tmp saved
Parsing 2012Apr
Note:  5,440,965 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 37384 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000016.tmp saved
Parsing 2012May
Note:  5,346,645 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 36368 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000017.tmp saved
Parsing 2012Jun
Note:  6,266,081 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 36656 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000018.tmp saved
Parsing 2012Jul
Note:  5,296,776 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 37128 obs)
file C:\Users\garre\AppData\Local\Temp\ST_01000019.tmp saved
Parsing 2012Aug
Note:  5,683,068 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 37590 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001a.tmp saved
Parsing 2012Sep
Note:  5,389,311 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 37733 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001b.tmp saved
Parsing 2012Oct
Note:  5,040,624 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 35203 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001c.tmp saved
Parsing 2012Nov
Note:  5,083,995 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 35313 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001d.tmp saved
Parsing 2012Dec
Note:  4,967,220 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 34291 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001e.tmp saved
Parsing 2013Jan
Note:  4,873,341 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 34265 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001f.tmp saved
Parsing 2013Feb
Note:  4,939,522 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 34514 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001g.tmp saved
Parsing 2013Mar
Note:  4,895,611 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 34211 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001h.tmp saved
Parsing 2013Apr
Note:  5,056,756 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 35334 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001i.tmp saved
Parsing 2013May
Note:  5,066,893 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 35483 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001j.tmp saved
Parsing 2013Jun
Note:  5,073,533 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 35455 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001k.tmp saved
Parsing 2013Jul
Note:  5,048,969 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 35499 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001l.tmp saved
Parsing 2013Aug
Note:  5,159,129 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 36097 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001m.tmp saved
Parsing 2013Sep
Note:  5,193,142 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 36315 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001n.tmp saved
Parsing 2013Oct
Note:  5,309,290 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 37068 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001o.tmp saved
Parsing 2013Nov
Note:  5,323,745 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 36907 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001p.tmp saved
Parsing 2013Dec
Note:  5,437,994 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 38698 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001q.tmp saved

. 
. local 2014MonthsOld "Jan Feb Mar Apr"

. 
. foreach m in `2014MonthsOld'{
  2.         disp "Parsing 2014`m'"
  3.         import delimited using "2014/LR-`m'-2014-old-format.txt", clear // see previous UTF comment.
  4.         tempfile tmp2014`m'
  5.         save `tmp2014`m''
  6. }
Parsing 2014Jan
Note:  5,418,259 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 38724 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001r.tmp saved
Parsing 2014Feb
Note:  5,392,685 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 38814 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001s.tmp saved
Parsing 2014Mar
Note:  5,366,458 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 38602 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001t.tmp saved
Parsing 2014Apr
Note:  1,464,393 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(19 vars, 10744 obs)
file C:\Users\garre\AppData\Local\Temp\ST_0100001u.tmp saved

. 
. clear // starting with a clean dataset

. 
. foreach y in `years'{
  2.         foreach m in `months'{
  3.                 disp "Appending `y'`m'"
  4.                 append using `tmp`y'`m''
  5.         }
  6. }
Appending 2009Jan
Appending 2009Feb
Appending 2009Mar
Appending 2009Apr
(note: variable product_item_name was str91, now str99 to accommodate using data's values)
Appending 2009May
Appending 2009Jun
Appending 2009Jul
Appending 2009Aug
Appending 2009Sep
Appending 2009Oct
Appending 2009Nov
Appending 2009Dec
Appending 2010Jan
Appending 2010Feb
(note: variable product_item_name was str99, now str118 to accommodate using data's values)
Appending 2010Mar
Appending 2010Apr
Appending 2010May
Appending 2010Jun
Appending 2010Jul
Appending 2010Aug
Appending 2010Sep
(note: variable brand_name was str93, now str120 to accommodate using data's values)
Appending 2010Oct
Appending 2010Nov
Appending 2010Dec
Appending 2011Jan
Appending 2011Feb
Appending 2011Mar
Appending 2011Apr
Appending 2011May
Appending 2011Jun
Appending 2011Jul
(note: variable brand_name was str120, now str121 to accommodate using data's values)
Appending 2011Aug
Appending 2011Sep
Appending 2011Oct
Appending 2011Nov
Appending 2011Dec
Appending 2012Jan
Appending 2012Feb
Appending 2012Mar
(note: variable label_type was str34, now str36 to accommodate using data's values)
Appending 2012Apr
Appending 2012May
Appending 2012Jun
(note: variable qty_discount_id was str204, now str255 to accommodate using data's values)
Appending 2012Jul
(note: variable size was str19, now str20 to accommodate using data's values)
Appending 2012Aug
Appending 2012Sep
Appending 2012Oct
Appending 2012Nov
Appending 2012Dec
Appending 2013Jan
Appending 2013Feb
Appending 2013Mar
Appending 2013Apr
Appending 2013May
Appending 2013Jun
Appending 2013Jul
Appending 2013Aug
Appending 2013Sep
Appending 2013Oct
Appending 2013Nov
Appending 2013Dec

. 
. foreach m in `2014MonthsOld'{
  2.         disp "Appending 2014`m'"
  3.         append using `tmp2014`m''
  4. }
Appending 2014Jan
Appending 2014Feb
Appending 2014Mar
Appending 2014Apr

. 
. gen record_num = _n

. 
. rename qty_discount_id discount_code

. 
. save old_format_months, replace
file old_format_months.dta saved

. 
. clear

. /* importing the discount codes and then merging them in */
. foreach y in `years'{
  2.         disp "Parsing discoutn codes for `y'"
  3.         import delimited using "`y'/Discount-codes-`y'.txt", clear // see previous UTF comment
  4.         duplicates drop _all, force // there appear to be duplicate records
  5.         
.         tempfile discount`y'
  6.         save `discount`y''
  7. }
Parsing discoutn codes for 2009
Note:  286,739 binary zeros were ignored in the source file.  The first instance occurred on line 1.  Binary
       zeros are not valid in text data.  Inspect your data carefully.
(6 vars, 2847 obs)

Duplicates in terms of nv_serial_number posting_type posting_month posting_year discount_code discount_desc

(668 observations deleted)
file C:\Users\garre\AppData\Local\Temp\ST_0100001v.tmp saved
Parsing discoutn codes for 2010
Note:  4,776,093 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(6 vars, 105986 obs)

Duplicates in terms of nv_serial_number posting_type posting_month posting_year discount_code discount_desc

(83549 observations deleted)
file C:\Users\garre\AppData\Local\Temp\ST_0100001w.tmp saved
Parsing discoutn codes for 2011
Note:  5,695,027 binary zeros were ignored in the source file.  The first instance occurred on line 1.
       Binary zeros are not valid in text data.  Inspect your data carefully.
(6 vars, 101373 obs)

Duplicates in terms of nv_serial_number posting_type posting_month posting_year discount_code discount_desc

(86767 observations deleted)
file C:\Users\garre\AppData\Local\Temp\ST_0100001x.tmp saved
Parsing discoutn codes for 2012
Note:  247,480 binary zeros were ignored in the source file.  The first instance occurred on line 1.  Binary
       zeros are not valid in text data.  Inspect your data carefully.
(6 vars, 4871 obs)

Duplicates in terms of nv_serial_number posting_type posting_month posting_year discount_code discount_desc

(2774 observations deleted)
file C:\Users\garre\AppData\Local\Temp\ST_01000020.tmp saved
Parsing discoutn codes for 2013
Note:  286,322 binary zeros were ignored in the source file.  The first instance occurred on line 1.  Binary
       zeros are not valid in text data.  Inspect your data carefully.
(6 vars, 3632 obs)

Duplicates in terms of nv_serial_number posting_type posting_month posting_year discount_code discount_desc

(1815 observations deleted)
file C:\Users\garre\AppData\Local\Temp\ST_01000021.tmp saved

. 
. import delimited using "2014/Discount-codes-Jan-thru-Apr-2014-old-format.txt", clear // see previous UTF com
> ment
Note:  170,479 binary zeros were ignored in the source file.  The first instance occurred on line 1.  Binary
       zeros are not valid in text data.  Inspect your data carefully.
(6 vars, 2047 obs)

. duplicates drop _all, force // there appear to be EXACT duplicate records. Not sure why

Duplicates in terms of nv_serial_number posting_type posting_month posting_year discount_code discount_desc

(1183 observations deleted)

. 
. foreach y in `years'{
  2.         disp "Appending discount codes for `y'"
  3.         append using `discount`y''
  4. }
Appending discount codes for 2009
(note: variable discount_desc was str197, now str255 to accommodate using data's values)
Appending discount codes for 2010
Appending discount codes for 2011
Appending discount codes for 2012
Appending discount codes for 2013

. 
. drop if posting_type == "LW"
(1545 observations deleted)

. 
. /* again, more duplicates. Not sure why. An eye scan suggests they're the same. Perhaps there's hidden chara
> cters.
> Need to be careful about this. */
. duplicates drop nv_serial_number posting_year posting_month posting_type discount_code, force // droping unw
> ated records. May want these later

Duplicates in terms of nv_serial_number posting_year posting_month posting_type discount_code

(35161 observations deleted)

. 
. tempfile AllDiscountCodes

. save `AllDiscountCodes'
file C:\Users\garre\AppData\Local\Temp\ST_01000022.tmp saved

. 
. 
. clear

. 
. use old_format_months

. 
. merge m:1 nv_serial_number posting_year posting_month posting_type discount_code using `AllDiscountCodes'

    Result                           # of obs.
    -----------------------------------------
    not matched                     2,260,322
        from master                 2,253,224  (_merge==1)
        from using                      7,098  (_merge==2)

    matched                               583  (_merge==3)
    -----------------------------------------

. 
. drop if _merge == 2 //dropping unused discount codes
(7098 observations deleted)

. /* some records appear to refer to the same product but have different prices.
> Nothing in the data distinguishes them. So, dropping for now */
. duplicates drop nv_serial_number posting_year posting_month posting_type discount_code, force // droping unw
> ated records. May want these later

Duplicates in terms of nv_serial_number posting_year posting_month posting_type discount_code

(1509740 observations deleted)

. 
. save old_format_months, replace
file old_format_months.dta saved

. 
. /* Fixing sizes so they have a common format */
. foreach non_char in "( ) , - . /" {
  2.         replace size = subinstr(size, "`non_char'", "",.) // removing known non alpha-numeric characters
  3. }
(0 real changes made)

. // replace size = ustrregexra(size, "[^a-zA-Z0-9.]","") // removing non-alpha numeric characters. Only works
>  with unicode
. 
. /* cleaning up some different labels to have consistent structure. Covers 90+% of raw
> data */
. replace size = "1L" if size == "1.0L"
(61604 real changes made)

. replace size = "750ML" if size == "750"
(25566 real changes made)

. replace size = "50ML" if size == "050ML"
(10 real changes made)

. replace size = "1.75L" if size == "1.75"
(5306 real changes made)

. replace size = "375ML" if size == "375"
(4573 real changes made)

. replace size = "1L" if size == "LT"
(1356 real changes made)

. replace size = "750ML" if size == "750BTL"
(0 real changes made)

. replace size = "750ML" if size == "750 BTL"
(2988 real changes made)

. replace size = "750ML" if size == "750ML."
(3836 real changes made)

. replace size = "1L" if size == "LITER"
(3982 real changes made)

. replace size = "50ML" if size == "50"
(804 real changes made)

. replace size = "1L" if size == "1LT"
(1795 real changes made)

. replace size = "750ML" if size == "0.75"
(3332 real changes made)

. replace size = "200ML" if size == "200"
(1407 real changes made)

. replace size = "750ML" if size == ".750LITERSBOTTLE"
(0 real changes made)

. replace size = "1L" if size == "1"
(1518 real changes made)

. replace size = "1L" if size == "1LITER"
(0 real changes made)

. replace size = "1L" if size == "1LIT"
(0 real changes made)

. replace size = "750ML" if size == "0.75BTL"
(0 real changes made)

. replace size = "1LTR" if size == "1L"
(104919 real changes made)

. replace size = "1.75L" if size == "1.75LT"
(294 real changes made)

. replace size = "50ML" if size == "50ML."
(290 real changes made)

. replace size = "375ML" if size == "375ML."
(578 real changes made)

. replace size = "1L" if size == "1000ML"
(457 real changes made)

. replace size = "1.75L" if size == "1.75LIT"
(0 real changes made)

. replace size = "375ML" if size == ".375LITERSBOTTLE"
(0 real changes made)

. replace size = "200ML" if size == ".200LITERSBOTTLE"
(0 real changes made)

. replace size = "1.75L" if size == "1.75ML"
(392 real changes made)

. replace size = "1L" if size == "1.000LITERSBOTTLE"
(0 real changes made)

. 
. // catching a few more
. replace size = subinstr(size, "LITER", "L",.)
(1075 real changes made)

. replace size = subinstr(size, "LTR", "L",.)
(105701 real changes made)

. replace size = subinstr(size, "LT", "L",.)
(380 real changes made)

. replace size = subinstr(size, "LIT", "L",.)
(1054 real changes made)

. 
. // removing spaces to standardize
. replace size = subinstr(size, " ", "",.)
(196207 real changes made)

. 
. // one last one
. replace size = "750ML" if size == "750BTL"
(0 real changes made)

. 
. /* keeping only larger bottles. Most likely to be purcahsed sizes*/
. keep if size == "750ML" | size == "1L" | size == "1.75L" | size == "375ML"
(103049 observations deleted)

. 
. /* identifying the type of discount, case or bottle */
. gen discount_size_type = ""
(641018 missing values generated)

. replace discount_size_type = "CASE" if regexm(discount_code, "(CS)|(CASE)|(CAS)")
discount_size_type was str1 now str4
(198625 real changes made)

. replace discount_size_type = "BOTTLE" if regexm(discount_code, "(BT)|(BTL)|(BOTTLE)")
discount_size_type was str4 now str6
(369345 real changes made)

. 
. /* Identifying if discount is in percentage terms or dollar terms */
. gen pct_discount = regexm(discount_code, "[\%]") // in brackets to ensure it matches %

. gen dollar_discount = regexm(discount_code, "[\$]")

. 
. /* Dropping unclear discounts */
. drop if pct_discount == 0 & dollar_discount == 0 // unclear discount style
(116636 observations deleted)

. drop if discount_size_type == "" // unclear if case or bottles
(22885 observations deleted)

. drop if pct_discount == 1 & dollar_discount == 1 // small number of observations with typos. Can fix later
(177 observations deleted)

. 
. replace discount_code = subinstr(discount_code, ")", ",",.) // normalizing some formatting
(59952 real changes made)

. replace discount_code = subinstr(discount_code, "(", "",.) // normalizing some formatting
(59950 real changes made)

. replace discount_code = stritrim(discount_code) // removing internal double spaces
(355298 real changes made)

. 
. drop if regexm(discount_code, "-") // irregular formatting for discoutn code. Maybe fix later.
(12243 observations deleted)

. 
. /* Using the SSC package moss to pull numbers out of discount codes */
. 
. moss discount_code, match("([0-9\.]+)") regex // pulls all numbers out of discount code

. 
. /* Now converting these into useful variables. The discount descriptions always
> has two paired numbres. The first is the discount amount and the second is the
> required purchase quantity. So, starting with 1 it should alternate between
> the discoutn amount and qty. */
. 
. foreach v of varlist _match*{
  2.         local num : subinstr local v "_match" "" // removes "_match" form local v
  3.         if mod(`num',2) != 0{
  4.                 local new_num = (`num' + 1) / 2
  5.                 rename `v' disc_p`new_num'
  6.         }
  7.         else {
  8.                 local new_num = (`num')/2
  9.                 rename `v' disc_q`new_num'
 10.         }
 11. }

. 
. /* Converting to numeric */
. destring(disc_*), replace force // shouldn't be any non-numerics. Not sure why force is needed
disc_p1 contains nonnumeric characters; replaced as double
(2 missing values generated)
disc_q1 contains nonnumeric characters; replaced as double
(346 missing values generated)
disc_p2 contains nonnumeric characters; replaced as double
(90392 missing values generated)
disc_q2 contains nonnumeric characters; replaced as double
(91905 missing values generated)
disc_p3 contains nonnumeric characters; replaced as double
(262343 missing values generated)
disc_q3 contains nonnumeric characters; replaced as double
(262770 missing values generated)
disc_p4 contains nonnumeric characters; replaced as double
(410373 missing values generated)
disc_q4 contains nonnumeric characters; replaced as double
(410611 missing values generated)
disc_p5 contains nonnumeric characters; replaced as double
(467429 missing values generated)
disc_q5 contains nonnumeric characters; replaced as double
(467495 missing values generated)
disc_p6 contains nonnumeric characters; replaced as double
(484193 missing values generated)
disc_q6 contains nonnumeric characters; replaced as double
(484212 missing values generated)
disc_p7 contains nonnumeric characters; replaced as double
(487908 missing values generated)
disc_q7 contains nonnumeric characters; replaced as int
(487928 missing values generated)
disc_p8 contains nonnumeric characters; replaced as double
(488577 missing values generated)
disc_q8 contains nonnumeric characters; replaced as double
(488576 missing values generated)
disc_p9 contains nonnumeric characters; replaced as double
(488877 missing values generated)
disc_q9 contains nonnumeric characters; replaced as int
(488887 missing values generated)
disc_p10 contains nonnumeric characters; replaced as double
(489044 missing values generated)
disc_q10 contains nonnumeric characters; replaced as int
(489044 missing values generated)
disc_p11 contains nonnumeric characters; replaced as double
(489070 missing values generated)
disc_q11 contains nonnumeric characters; replaced as byte
(489070 missing values generated)

. 
. drop _count _pos*

. 
. /* Restructuring into long format. This will allow graphing of the tariff,
> price paid, and normalizing to see curvature. */
. 
. /* adding in a 0th option which is the normal price */
. gen disc_p0 = 0

. gen disc_q0 = 0

. 
. reshape long disc_p disc_q, i(record_num) j(option)
(note: j = 0 1 2 3 4 5 6 7 8 9 10 11)
disc_p1:  284007 values would be changed; not changed
disc_q1:  1826 values would be changed; not changed
disc_p2:  234310 values would be changed; not changed
disc_q2:  699 values would be changed; not changed
disc_p3:  137131 values would be changed; not changed
disc_q3:  253 values would be changed; not changed
disc_p4:  46503 values would be changed; not changed
disc_q4:  127 values would be changed; not changed
disc_p5:  12658 values would be changed; not changed
disc_q5:  33 values would be changed; not changed
disc_p6:  2958 values would be changed; not changed
disc_q6:  15 values would be changed; not changed
disc_p7:  838 values would be changed; not changed
disc_p8:  369 values would be changed; not changed
disc_p9:  121 values would be changed; not changed
disc_p10:  24 values would be changed; not changed

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                   489077   -> 5.9e+06
Number of variables                  49   ->      28
j variable (12 values)                    ->   option
xij variables:
           disc_p0 disc_p1 ... disc_p11   ->   disc_p
           disc_q0 disc_q1 ... disc_q11   ->   disc_q
-----------------------------------------------------------------------------

. 
. /* Dropping observations that are extra (i.e. have 2 tariff options while
> the maximum observed in the data set is higher than 2) or some other problem
> that resulted in a missing value for p or q */
. drop if disc_p == . | disc_q == .
(4161464 observations deleted)

. 
. /* Calculating actual price paid at each point. 4 cases to deal with:
> 1) pct discount on cases
> 2) pct discount on bottles
> 3) dollar discount on cases
> 4) dollar discount on bottles
> 
> First thing is to convert all discounts into one type. So I'll convert everything
> into dollar discounts. Everything will be kept in the same units as the discount
> size type for now (i.e. if its a bottle discount then the tariff will be expressed
> in bottle terms).
> 
> Generally there doesn't appear to be much of a discount for buying a case vs 
> bottles striaght up (beyond the discount for a cases worth of bottles). In those
> instances where there is a big discrepancy represent less than 1% of the data, so
> we can probably assume their typos */
. gen disc_dollars = .
(1707460 missing values generated)

. replace disc_dollars = disc_p if dollar_discount == 1
(1615104 real changes made)

. replace disc_dollars = disc_p/100*price_per_case if discount_size_type == "CASE" & pct_discount == 1
(67781 real changes made)

. replace disc_dollars = disc_p/100*price_per_bottle if discount_size_type == "BOTTLE" & pct_discount == 1
(24575 real changes made)

. 
. gen actual_p = .
(1707460 missing values generated)

. replace actual_p = price_per_bottle - disc_dollars if discount_size_type == "BOTTLE"
(1146012 real changes made)

. replace actual_p = price_per_case - disc_dollars if discount_size_type == "CASE"
(561448 real changes made)

. 
. gen tariff = actual_p * disc_q

. 
. egen max_p = max(actual_p), by(record_num)

. 
. gen norm_p = actual_p / max_p

. 
. gen norm_tariff = norm_p*disc_q

. 
. /* some data validation. Some records have options labeled incorrectly (i.e. non-
> consecutively. Generating a test and then dropping records that don't conform */
. 
. bys record_num (option): gen test = _n

. gen test_tag = (option != (test-1))

. egen test_total = total(test_tag), by(record_num)

. drop if test_total > 0
(628 observations deleted)

. drop test test_tag test_total

. 
. save old_format_months, replace
file old_format_months.dta saved

. 
. log close
      name:  <unnamed>
       log:  E:\Box\Box Sync\Snuffles Backup\gh8728\Projects\Liquor\Data\NY_price_schedules\data_clean_old_for
> mat.txt
  log type:  text
 closed on:  26 Nov 2017, 22:12:30
--------------------------------------------------------------------------------------------------------------
