--------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  E:\Box\Box Sync\Snuffles Backup\gh8728\Projects\Liquor\Data\Nielsen_Panel\analysis\asclogit_test.
> txt
  log type:  text
 opened on:  16 May 2017, 19:46:46

. 
. use individual_logit_sample.dta

. 
. // generating dummies for income levels
. gen byte inc_lt30 = (household_income <= 15)

. gen byte inc_30_to_70 = (household_income > 15 & household_income <= 23)

. gen byte inc_70_to_100 = (household_income == 26)

. gen byte inc_100_plus = (household_income > 26)

. 
. gen p_x_inc_lt30 = price*inc_lt30

. gen p_x_inc_30_to_70 = price*inc_30_to_70

. gen p_x_inc_70_to_100 = price*inc_70_to_100

. gen p_x_inc_100_plus = price*inc_100_plus

. 
. gen neg_p_x_inc_lt30 = -p_x_inc_lt30 - 1e-2

. gen neg_p_x_inc_30_to_70 = -p_x_inc_30_to_70 - 1e-2

. gen neg_p_x_inc_70_to_100= -p_x_inc_70_to_100 - 1e-2

. gen neg_p_x_inc_100_plus = -p_x_inc_100_plus - 1e-2

. 
. gen byte month = month(dofm(date_m))

. gen int year = year(dofm(date_m))

. 
. gen byte d_m_1 = (month == 1)

. gen byte d_m_2 = (month == 2)

. gen byte d_m_3 = (month == 3)

. gen byte d_m_4 = (month == 4)

. gen byte d_m_5 = (month == 5)

. gen byte d_m_6 = (month == 6)

. gen byte d_m_7 = (month == 7)

. gen byte d_m_8 = (month == 8)

. gen byte d_m_9 = (month == 9)

. gen byte d_m_10 = (month == 10)

. gen byte d_m_11 = (month == 11)

. gen byte d_m_12 = (month == 12)

. 
. gen d_y_2008 = (year == 2008)

. gen d_y_2009 = (year == 2009)

. gen d_y_2010 = (year == 2010)

. gen d_y_2011 = (year == 2011)

. gen d_y_2012 = (year == 2012)

. gen d_y_2013 = (year == 2013)

. gen d_y_2014 = (year == 2014)

. 
. // generating income  x liquor group interactions
. foreach inc of varlist inc_* {
  2.         foreach group of varlist d_g_*{
  3.                 gen byte `inc'_x_`group' = `inc'*`group'
  4.         }
  5. }

. 
. 
. // generating proof x income group
. gen proof_x_inc_lt30 = proof*inc_lt30

. gen proof_x_inc_30_to_70 = proof*inc_30_to_70

. gen proof_x_inc_70_to_100 = proof*inc_70_to_100

. gen proof_x_inc_100_plus = proof*inc_100_plus

. 
. // generating imported x income group
. gen byte imported_x_inc_lt30 = imported*inc_lt30

. gen byte imported_x_inc_30_to_70 = imported*inc_30_to_70

. gen byte imported_x_inc_70_to_100 = imported*inc_70_to_100

. gen byte imported_x_inc_100_plus = imported*inc_100_plus

. 
. //// sampling cases
> /*
> gen sort_order = _n
> egen select = tag(case)
> gen rand = runiform()
> sort select rand
> replace select = (_n > (_N-5000)) // define number of cases here
> bys case (select): replace select = select[_N]
> sort sort_order
> drop sort_order rand
> keep if select == 1
> */
. /////
> 
. //// sampling within case to further reduce sample size
> /*
> sample 10 if choice == 0 & product != 0, by(case) count
> */
. 
. /*
> //generating product dummies
> foreach i of numlist 1/101{
>         gen byte d_p_`i' = (product == `i')
> }
> */
. 
. gen holiday = d_m_11 + d_m_12 + d_m_1 // Nov or Dec or Jan

. 
. gen d_q_1 = d_m_1 + d_m_2 + d_m_3

. gen d_q_2 = d_m_4 + d_m_5 + d_m_6

. gen d_q_3 = d_m_7 + d_m_8 + d_m_9

. gen d_q_4 = d_m_10 + d_m_11 + d_m_12

. 
. //export delimited asclogit_test.csv, replace
. 
. replace product = 102 if product == 101 & d_g_vod == 1
(755 real changes made)

. replace product = 103 if product == 101 & d_g_sch == 1
(199 real changes made)

. replace product = 104 if product == 101 & d_g_brb == 1
(368 real changes made)

. replace product = 105 if product == 101 & d_g_whs == 1
(5 real changes made)

. replace product = 106 if product == 101 & d_g_teq == 1
(18 real changes made)

. replace product = 107 if product == 101 & d_g_otr == 1
(924 real changes made)

. 
. asclogit choice p_x_* imported proof, case(case) alt(product) base(0) diff nocons
note: variable p_x_inc_lt30 has 2094 cases that are not alternative-specific: there is no within-case
       variability
note: variable p_x_inc_3~70 has 1373 cases that are not alternative-specific: there is no within-case
       variability
note: variable p_x_inc_~100 has 1990 cases that are not alternative-specific: there is no within-case
       variability
note: variable p_x_inc_10~s has 2157 cases that are not alternative-specific: there is no within-case
       variability

Iteration 0:   log likelihood = -9182.2733  
Iteration 1:   log likelihood = -9165.9471  
Iteration 2:   log likelihood = -9165.8972  
Iteration 3:   log likelihood = -9165.8972  

Alternative-specific conditional logit         Number of obs      =     134093
Case variable: case                            Number of cases    =       2538

Alternative variable: product                  Alts per case: min =         14
                                                              avg =       52.8
                                                              max =         62

                                                  Wald chi2(6)    =    2109.30
Log likelihood = -9165.8972                       Prob > chi2     =     0.0000

-----------------------------------------------------------------------------------
           choice |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
product           |
     p_x_inc_lt30 |  -.0627503   .0056328   -11.14   0.000    -.0737904   -.0517102
 p_x_inc_30_to_70 |  -.0219469   .0031429    -6.98   0.000    -.0281068   -.0157869
p_x_inc_70_to_100 |  -.0226535   .0044471    -5.09   0.000    -.0313697   -.0139374
 p_x_inc_100_plus |  -.0011903   .0049311    -0.24   0.809    -.0108551    .0084745
         imported |   .1028341   .0519784     1.98   0.048     .0009583    .2047099
            proof |  -.0248996   .0008179   -30.44   0.000    -.0265025   -.0232966
-----------------------------------------------------------------------------------

. 
. /*
> //asclogit choice p_x_* imported_x_* proof_x_* d_g_gin d_g_vod d_g_rum d_g_sch, case(case) alt(product) base
> (0) diff
> mixlogit choice imported_x_* proof_x_* d_g_gin d_g_vod d_g_rum d_g_sch d_p_1-d_p_101, group(case) rand(p_x_*
> ) iter(150) nrep(1)
> */
. 
. 
. 
. /* Adjusting constants to account for choice based sample */
. 
. predict xb, xb

. 
. gen adj_util = xb - ln(sample_weight/pop_weight)

. 
. gen num = exp(adj_util)

. egen denom = total(exp(adj_util)), by(case)

. gen prob = num/denom

. 
. local alpha1 = _b[p_x_inc_lt30]

. local alpha2 =  _b[p_x_inc_30_to_70]

. local alpha3 = _b[p_x_inc_70_to_100]

. local alpha4 = _b[p_x_inc_100_plus]

. 
. gen ed_ij = (`alpha1'*inc_lt30 + `alpha2'*inc_30_to_70 + `alpha3'*inc_70_to_100 + `alpha4'*inc_100_plus)*pri
> ce*(1-prob)

. 
. egen ed_j = mean(ed_ij), by(product)

. 
. sum ed_j, det

                            ed_j
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -1.031031      -1.300653
 5%    -.8891116      -1.300653
10%    -.7955324      -1.300653       Obs              134093
25%    -.6005368      -1.300653       Sum of Wgt.      134093

50%    -.4589936                      Mean          -.4551533
                        Largest       Std. Dev.      .2497539
75%    -.2658311              0
90%    -.1133102              0       Variance        .062377
95%    -.0510235              0       Skewness      -.3327346
99%            0              0       Kurtosis       2.982509

. 
. 
. log close
      name:  <unnamed>
       log:  E:\Box\Box Sync\Snuffles Backup\gh8728\Projects\Liquor\Data\Nielsen_Panel\analysis\asclogit_test.
> txt
  log type:  text
 closed on:  16 May 2017, 19:47:10
--------------------------------------------------------------------------------------------------------------
